/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as CoLayoutImport } from './routes/_coLayout'
import { Route as CoAuthLayoutImport } from './routes/_coAuthLayout'
import { Route as CoCompanyInitialRouteImport } from './routes/co/company-initial/route'
import { Route as CoAuthLayoutCoSignupRouteImport } from './routes/_coAuthLayout/co/signup/route'
import { Route as CoAuthLayoutCoSigninRouteImport } from './routes/_coAuthLayout/co/signin/route'
import { Route as CoLayoutDashboardsCoWarehousesRouteImport } from './routes/_coLayout/dashboards/co/warehouses/route'
import { Route as CoLayoutDashboardsCoWarehouseStaffRouteImport } from './routes/_coLayout/dashboards/co/warehouse-staff/route'
import { Route as CoLayoutDashboardsCoVehicleRouteImport } from './routes/_coLayout/dashboards/co/vehicle/route'
import { Route as CoLayoutDashboardsCoShipmentRouteImport } from './routes/_coLayout/dashboards/co/shipment/route'
import { Route as CoLayoutDashboardsCoPlannerWarehousePlannerRouteImport } from './routes/_coLayout/dashboards/co/planner/warehouse-planner/route'

// Create/Update Routes

const CoLayoutRoute = CoLayoutImport.update({
  id: '/_coLayout',
  getParentRoute: () => rootRoute,
} as any)

const CoAuthLayoutRoute = CoAuthLayoutImport.update({
  id: '/_coAuthLayout',
  getParentRoute: () => rootRoute,
} as any)

const CoCompanyInitialRouteRoute = CoCompanyInitialRouteImport.update({
  path: '/co/company-initial',
  getParentRoute: () => rootRoute,
} as any)

const CoAuthLayoutCoSignupRouteRoute = CoAuthLayoutCoSignupRouteImport.update({
  path: '/co/signup',
  getParentRoute: () => CoAuthLayoutRoute,
} as any)

const CoAuthLayoutCoSigninRouteRoute = CoAuthLayoutCoSigninRouteImport.update({
  path: '/co/signin',
  getParentRoute: () => CoAuthLayoutRoute,
} as any)

const CoLayoutDashboardsCoWarehousesRouteRoute =
  CoLayoutDashboardsCoWarehousesRouteImport.update({
    path: '/dashboards/co/warehouses',
    getParentRoute: () => CoLayoutRoute,
  } as any)

const CoLayoutDashboardsCoWarehouseStaffRouteRoute =
  CoLayoutDashboardsCoWarehouseStaffRouteImport.update({
    path: '/dashboards/co/warehouse-staff',
    getParentRoute: () => CoLayoutRoute,
  } as any)

const CoLayoutDashboardsCoVehicleRouteRoute =
  CoLayoutDashboardsCoVehicleRouteImport.update({
    path: '/dashboards/co/vehicle',
    getParentRoute: () => CoLayoutRoute,
  } as any)

const CoLayoutDashboardsCoShipmentRouteRoute =
  CoLayoutDashboardsCoShipmentRouteImport.update({
    path: '/dashboards/co/shipment',
    getParentRoute: () => CoLayoutRoute,
  } as any)

const CoLayoutDashboardsCoPlannerWarehousePlannerRouteRoute =
  CoLayoutDashboardsCoPlannerWarehousePlannerRouteImport.update({
    path: '/dashboards/co/planner/warehouse-planner',
    getParentRoute: () => CoLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_coAuthLayout': {
      id: '/_coAuthLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof CoAuthLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_coLayout': {
      id: '/_coLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof CoLayoutImport
      parentRoute: typeof rootRoute
    }
    '/co/company-initial': {
      id: '/co/company-initial'
      path: '/co/company-initial'
      fullPath: '/co/company-initial'
      preLoaderRoute: typeof CoCompanyInitialRouteImport
      parentRoute: typeof rootRoute
    }
    '/_coAuthLayout/co/signin': {
      id: '/_coAuthLayout/co/signin'
      path: '/co/signin'
      fullPath: '/co/signin'
      preLoaderRoute: typeof CoAuthLayoutCoSigninRouteImport
      parentRoute: typeof CoAuthLayoutImport
    }
    '/_coAuthLayout/co/signup': {
      id: '/_coAuthLayout/co/signup'
      path: '/co/signup'
      fullPath: '/co/signup'
      preLoaderRoute: typeof CoAuthLayoutCoSignupRouteImport
      parentRoute: typeof CoAuthLayoutImport
    }
    '/_coLayout/dashboards/co/shipment': {
      id: '/_coLayout/dashboards/co/shipment'
      path: '/dashboards/co/shipment'
      fullPath: '/dashboards/co/shipment'
      preLoaderRoute: typeof CoLayoutDashboardsCoShipmentRouteImport
      parentRoute: typeof CoLayoutImport
    }
    '/_coLayout/dashboards/co/vehicle': {
      id: '/_coLayout/dashboards/co/vehicle'
      path: '/dashboards/co/vehicle'
      fullPath: '/dashboards/co/vehicle'
      preLoaderRoute: typeof CoLayoutDashboardsCoVehicleRouteImport
      parentRoute: typeof CoLayoutImport
    }
    '/_coLayout/dashboards/co/warehouse-staff': {
      id: '/_coLayout/dashboards/co/warehouse-staff'
      path: '/dashboards/co/warehouse-staff'
      fullPath: '/dashboards/co/warehouse-staff'
      preLoaderRoute: typeof CoLayoutDashboardsCoWarehouseStaffRouteImport
      parentRoute: typeof CoLayoutImport
    }
    '/_coLayout/dashboards/co/warehouses': {
      id: '/_coLayout/dashboards/co/warehouses'
      path: '/dashboards/co/warehouses'
      fullPath: '/dashboards/co/warehouses'
      preLoaderRoute: typeof CoLayoutDashboardsCoWarehousesRouteImport
      parentRoute: typeof CoLayoutImport
    }
    '/_coLayout/dashboards/co/planner/warehouse-planner': {
      id: '/_coLayout/dashboards/co/planner/warehouse-planner'
      path: '/dashboards/co/planner/warehouse-planner'
      fullPath: '/dashboards/co/planner/warehouse-planner'
      preLoaderRoute: typeof CoLayoutDashboardsCoPlannerWarehousePlannerRouteImport
      parentRoute: typeof CoLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  CoAuthLayoutRoute: CoAuthLayoutRoute.addChildren({
    CoAuthLayoutCoSigninRouteRoute,
    CoAuthLayoutCoSignupRouteRoute,
  }),
  CoLayoutRoute: CoLayoutRoute.addChildren({
    CoLayoutDashboardsCoShipmentRouteRoute,
    CoLayoutDashboardsCoVehicleRouteRoute,
    CoLayoutDashboardsCoWarehouseStaffRouteRoute,
    CoLayoutDashboardsCoWarehousesRouteRoute,
    CoLayoutDashboardsCoPlannerWarehousePlannerRouteRoute,
  }),
  CoCompanyInitialRouteRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_coAuthLayout",
        "/_coLayout",
        "/co/company-initial"
      ]
    },
    "/_coAuthLayout": {
      "filePath": "_coAuthLayout.tsx",
      "children": [
        "/_coAuthLayout/co/signin",
        "/_coAuthLayout/co/signup"
      ]
    },
    "/_coLayout": {
      "filePath": "_coLayout.tsx",
      "children": [
        "/_coLayout/dashboards/co/shipment",
        "/_coLayout/dashboards/co/vehicle",
        "/_coLayout/dashboards/co/warehouse-staff",
        "/_coLayout/dashboards/co/warehouses",
        "/_coLayout/dashboards/co/planner/warehouse-planner"
      ]
    },
    "/co/company-initial": {
      "filePath": "co/company-initial/route.tsx"
    },
    "/_coAuthLayout/co/signin": {
      "filePath": "_coAuthLayout/co/signin/route.tsx",
      "parent": "/_coAuthLayout"
    },
    "/_coAuthLayout/co/signup": {
      "filePath": "_coAuthLayout/co/signup/route.tsx",
      "parent": "/_coAuthLayout"
    },
    "/_coLayout/dashboards/co/shipment": {
      "filePath": "_coLayout/dashboards/co/shipment/route.tsx",
      "parent": "/_coLayout"
    },
    "/_coLayout/dashboards/co/vehicle": {
      "filePath": "_coLayout/dashboards/co/vehicle/route.tsx",
      "parent": "/_coLayout"
    },
    "/_coLayout/dashboards/co/warehouse-staff": {
      "filePath": "_coLayout/dashboards/co/warehouse-staff/route.tsx",
      "parent": "/_coLayout"
    },
    "/_coLayout/dashboards/co/warehouses": {
      "filePath": "_coLayout/dashboards/co/warehouses/route.tsx",
      "parent": "/_coLayout"
    },
    "/_coLayout/dashboards/co/planner/warehouse-planner": {
      "filePath": "_coLayout/dashboards/co/planner/warehouse-planner/route.tsx",
      "parent": "/_coLayout"
    }
  }
}
ROUTE_MANIFEST_END */
